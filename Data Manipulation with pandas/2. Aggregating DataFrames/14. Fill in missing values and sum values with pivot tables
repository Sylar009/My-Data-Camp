Fill in missing values and sum values with pivot tables
The .pivot_table() method has several useful arguments, including fill_value and margins.

fill_value replaces missing values with a real value (known as imputation). What to replace missing values with is a topic big enough to have its own course 
(Dealing with Missing Data in Python), but the simplest thing to do is to substitute a dummy value.
margins is a shortcut for when you pivoted by two variables, but also wanted to pivot by each of those variables separately: it gives the row and column totals of the
pivot table contents.
In this exercise, you'll practice using these arguments to up your pivot table skills, which will help you crunch numbers more efficiently!

sales is available and pandas is imported as pd.

Instructions 2/2
50 XP
1
Print the mean weekly_sales by department and type, filling in any missing values with 0.
2
Print the mean weekly_sales by department and type, filling in any missing values with 0 and summing all rows and columns.

Answer:============================================================================================================================

1. 

# Print mean weekly_sales by department and type; fill missing values with 0
print(sales.pivot_table(values="weekly_sales", index="department", columns="type", fill_value=0))

2.

# Print the mean weekly_sales by department and type; fill missing values with 0s; sum all rows and cols
print(sales.pivot_table(values="weekly_sales", index="department", columns="type", fill_value=0, margins=True))
 
Output:============================================================================================================================

1.

<script.py> output:
    type                 A           B
    department                        
    1            30961.725   44050.627
    2            67600.159  112958.527
    3            17160.003   30580.655
    4            44285.399   51219.654
    5            34821.011   63236.875
    ...                ...         ...
    95          123933.787   77082.103
    96           21367.043    9528.538
    97           28471.267    5828.873
    98           12875.423     217.428
    99             379.124       0.000
    
    [80 rows x 2 columns]
    
2.

type                A           B        All
department                                  
1           30961.725   44050.627  32052.467
2           67600.159  112958.527  71380.023
3           17160.003   30580.655  18278.391
4           44285.399   51219.654  44863.254
5           34821.011   63236.875  37189.000
...               ...         ...        ...
96          21367.043    9528.538  20337.608
97          28471.267    5828.873  26584.401
98          12875.423     217.428  11820.590
99            379.124       0.000    379.124
All         23674.667   25696.678  23843.950

[81 rows x 3 columns]



